name: iOS CI
on:
  push:
    branches: [ main ]
    tags:
      - "v1.0.6"
jobs:
  tests:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ruby/setup-ruby@v1
        with: { ruby-version: '3.2', bundler-cache: true }

      - name: Cache SPM
        uses: actions/cache@v4
        with:
          path: |
            ~/.swiftpm
            ~/Library/Developer/Xcode/DerivedData
            ~/Library/Caches/org.swift.swiftpm
          key: spm-${{ runner.os }}-${{ hashFiles('**/Package.resolved') }}

      - name: Install gems
        run: bundle install --path vendor/bundle

      - name: Run unit tests
        run: bundle exec fastlane ios tests

      - name: Upload result bundle (if created)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: xcode-result-bundle
          path: test_output/**/*
  beta:
    needs: tests
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: macos-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - uses: maxim-lobanov/setup-xcode@v1
        with: { xcode-version: "15.4" }

      - uses: ruby/setup-ruby@v1
        with: { ruby-version: '3.2', bundler-cache: true }

      - name: Cache SPM
        uses: actions/cache@v4
        with:
          path: |
            ~/.swiftpm
            ~/Library/Developer/Xcode/DerivedData
            ~/Library/Caches/org.swift.swiftpm
          key: spm-${{ runner.os }}-${{ hashFiles('**/Package.resolved') }}

      - name: Install gems
        run: bundle install --path vendor/bundle

      - name: Fastlane beta
        env:
          MATCH_GIT_URL: git@github.com:solodkyi/ios-signing-certificates.git
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          ASC_KEY_CONTENT: ${{ secrets.ASC_KEY_CONTENT }}
        run: bundle exec fastlane beta

      - name: Export IPA & dSYMs
        if: always()
        run: |
          mkdir -p artifacts
          cp -R ./build/*.ipa artifacts/ || true
          find ~/Library/Developer/Xcode/Archives -name "*.dSYMs" -print0 | xargs -0 -I {} cp -R "{}" artifacts || true
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: artifacts